{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\TodoList\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { RiCloseCircleLine, TiEdit } from 'react-icons/all';\nimport unchecked from \"./unchecked.png\";\nimport checked from \"./checked.png\";\nconst TodoList = _ref => {\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    setedit\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  useEffect(() => {\n    setedit(edit);\n  }, [edit, setedit]);\n  return todos.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: todo.isComplete ? 'complete' : 'todo-row',\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, todo.isComplete ? /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '30px',\n      height: '30px'\n    },\n    src: checked,\n    alt: \"\",\n    onClick: () => completeTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img\",\n    src: unchecked,\n    alt: \"\",\n    onClick: () => completeTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }\n  }), todo.text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RiCloseCircleLine, {\n    onClick: () => removeTodo(todo.id),\n    className: \"delete-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TiEdit, {\n    onClick: () => setEdit({\n      id: todo.id,\n      value: todo.text\n    }),\n    className: \"edit-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }))));\n};\nexport default TodoList;","map":{"version":3,"names":["React","useEffect","useState","RiCloseCircleLine","TiEdit","unchecked","checked","TodoList","todos","completeTodo","removeTodo","setedit","edit","setEdit","id","value","map","todo","index","isComplete","width","height","text"],"sources":["D:/ReactJS/TodoList/src/components/TodoList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { RiCloseCircleLine, TiEdit } from 'react-icons/all';\nimport unchecked from \"./unchecked.png\"\nimport checked from \"./checked.png\"\n\nconst TodoList = ({ todos, completeTodo, removeTodo, setedit }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  useEffect(() => {\n    setedit(edit)\n  }, [edit, setedit])\n\n  return todos.map((todo, index) => (\n    <div\n    className={todo.isComplete ? 'complete' : 'todo-row'}\n      key={index}\n    >\n      <div >\n        {/* <BsCheckAll className={todo.isComplete ? 'checkbox check' : 'checkbox'} style={{}} key={todo.id} onClick={() => completeTodo(todo.id)} /> */}\n        {todo.isComplete ? <img style={{width: '30px', height: '30px'}} src={checked} alt='' onClick={() => completeTodo(todo.id)} \n        /> : <img className='img' src={unchecked} alt='' onClick={() => completeTodo(todo.id)} />}\n        {/* <input className='checkbox' type='checkbox' key={todo.id} onClick={() => completeTodo(todo.id)} /> */}\n        {todo.text}\n      </div>\n      <div className='icons'>\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon'\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,EAAEC,MAAM,QAAQ,iBAAiB;AAC3D,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,OAAO,MAAM,eAAe;AAEnC,MAAMC,QAAQ,GAAG,QAAkD;EAAA,IAAjD;IAAEC,KAAK;IAAEC,YAAY;IAAEC,UAAU;IAAEC;EAAQ,CAAC;EAC5D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAC/BY,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,IAAI,CAAC;EACf,CAAC,EAAE,CAACA,IAAI,EAAED,OAAO,CAAC,CAAC;EAEnB,OAAOH,KAAK,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B;IACA,SAAS,EAAED,IAAI,CAACE,UAAU,GAAG,UAAU,GAAG,UAAW;IACnD,GAAG,EAAED,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEGD,IAAI,CAACE,UAAU,gBAAG;IAAK,KAAK,EAAE;MAACC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAM,CAAE;IAAC,GAAG,EAAEf,OAAQ;IAAC,GAAG,EAAC,EAAE;IAAC,OAAO,EAAE,MAAMG,YAAY,CAACQ,IAAI,CAACH,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACxH,gBAAG;IAAK,SAAS,EAAC,KAAK;IAAC,GAAG,EAAET,SAAU;IAAC,GAAG,EAAC,EAAE;IAAC,OAAO,EAAE,MAAMI,YAAY,CAACQ,IAAI,CAACH,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAExFG,IAAI,CAACK,IAAI,CACN,eACN;IAAK,SAAS,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACpB,oBAAC,iBAAiB;IAChB,OAAO,EAAE,MAAMZ,UAAU,CAACO,IAAI,CAACH,EAAE,CAAE;IACnC,SAAS,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACvB,eACF,oBAAC,MAAM;IACL,OAAO,EAAE,MAAMD,OAAO,CAAC;MAAEC,EAAE,EAAEG,IAAI,CAACH,EAAE;MAAEC,KAAK,EAAEE,IAAI,CAACK;IAAK,CAAC,CAAE;IAC1D,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACrB,CACE,CAET,CAAC;AACJ,CAAC;AAED,eAAef,QAAQ"},"metadata":{},"sourceType":"module"}