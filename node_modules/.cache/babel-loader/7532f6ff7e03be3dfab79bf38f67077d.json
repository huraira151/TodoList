{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\TodoList\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nconst getTodoList = () => {\n  let todoList = localStorage.getItem('todos');\n  if (todoList) {\n    return JSON.parse(localStorage.getItem('todos'));\n  } else {\n    return [];\n  }\n};\nfunction TodoList() {\n  const [todos, setTodos] = useState(getTodoList());\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    if (window.confirm('Are you sure you wish to delete this Todo?')) setTodos(removedArr);\n  };\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"What's the Plan for Today?\"), /*#__PURE__*/React.createElement(TodoForm, {\n    onSubmit: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Todo, {\n    todos: todos,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    updateTodo: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\nexport default TodoList;","map":{"version":3,"names":["React","useState","useEffect","TodoForm","Todo","getTodoList","todoList","localStorage","getItem","JSON","parse","TodoList","todos","setTodos","setItem","stringify","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removedArr","filter","window","confirm","completeTodo","updatedTodos","isComplete"],"sources":["D:/ReactJS/TodoList/src/components/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nconst getTodoList = () => {\n  let todoList = localStorage.getItem('todos')\n\n  if (todoList) {\n    return JSON.parse(localStorage.getItem('todos'));\n  } else {\n    return [];\n  }\n}\n\nfunction TodoList() {\n  const [todos, setTodos] = useState(getTodoList());\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    if (window.confirm('Are you sure you wish to delete this Todo?'))\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <h1>What's the Plan for Today?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AAEzB,MAAMC,WAAW,GAAG,MAAM;EACxB,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE5C,IAAIF,QAAQ,EAAE;IACZ,OAAOG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAClD,CAAC,MAAM;IACL,OAAO,EAAE;EACX;AACF,CAAC;AAED,SAASG,QAAQ,GAAG;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACI,WAAW,EAAE,CAAC;EAEjDH,SAAS,CAAC,MAAM;IACdK,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEL,IAAI,CAACM,SAAS,CAACH,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMI,OAAO,GAAGC,IAAI,IAAI;IACtB,IAAI,CAACA,IAAI,CAACC,IAAI,IAAI,OAAO,CAACC,IAAI,CAACF,IAAI,CAACC,IAAI,CAAC,EAAE;MACzC;IACF;IAEA,MAAME,QAAQ,GAAG,CAACH,IAAI,EAAE,GAAGL,KAAK,CAAC;IAEjCC,QAAQ,CAACO,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,QAAQ,KAAK;IACvC,IAAI,CAACA,QAAQ,CAACL,IAAI,IAAI,OAAO,CAACC,IAAI,CAACI,QAAQ,CAACL,IAAI,CAAC,EAAE;MACjD;IACF;IAEAL,QAAQ,CAACW,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,GAAGC,QAAQ,GAAGG,IAAK,CAAC,CAAC;EAC5E,CAAC;EAED,MAAME,UAAU,GAAGD,EAAE,IAAI;IACvB,MAAME,UAAU,GAAG,CAAC,GAAGjB,KAAK,CAAC,CAACkB,MAAM,CAACb,IAAI,IAAIA,IAAI,CAACU,EAAE,KAAKA,EAAE,CAAC;IAC5D,IAAII,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAEhEnB,QAAQ,CAACgB,UAAU,CAAC;EACtB,CAAC;EAED,MAAMI,YAAY,GAAGN,EAAE,IAAI;IACzB,IAAIO,YAAY,GAAGtB,KAAK,CAACa,GAAG,CAACR,IAAI,IAAI;MACnC,IAAIA,IAAI,CAACU,EAAE,KAAKA,EAAE,EAAE;QAClBV,IAAI,CAACkB,UAAU,GAAG,CAAClB,IAAI,CAACkB,UAAU;MACpC;MACA,OAAOlB,IAAI;IACb,CAAC,CAAC;IACFJ,QAAQ,CAACqB,YAAY,CAAC;EACxB,CAAC;EAED,oBACE,uDACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gCAAmC,eACnC,oBAAC,QAAQ;IAAC,QAAQ,EAAElB,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAC/B,oBAAC,IAAI;IACH,KAAK,EAAEJ,KAAM;IACb,YAAY,EAAEqB,YAAa;IAC3B,UAAU,EAAEL,UAAW;IACvB,UAAU,EAAEP,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACvB,CACD;AAEP;AAEA,eAAeV,QAAQ"},"metadata":{},"sourceType":"module"}