{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\TodoList\\\\src\\\\components\\\\TodoForm.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nfunction TodoForm(props) {\n  var _props$edit, _props$edit4;\n  const [input, setInput] = useState(props.edit ? (_props$edit = props.edit) === null || _props$edit === void 0 ? void 0 : _props$edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n  useEffect(() => {\n    var _props$edit2;\n    if ((_props$edit2 = props.edit) === null || _props$edit2 === void 0 ? void 0 : _props$edit2.id) {\n      var _props$edit3;\n      setInput((_props$edit3 = props.edit) === null || _props$edit3 === void 0 ? void 0 : _props$edit3.value);\n    }\n  }, [props.edit]);\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n  if (props.edit && ((_props$edit4 = props.edit) === null || _props$edit4 === void 0 ? void 0 : _props$edit4.id)) {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"todo-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Update your item\",\n      value: input,\n      onChange: handleChange,\n      name: \"text\",\n      ref: inputRef,\n      className: \"todo-input edit\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"todo-button edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Update\")));\n  }\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"todo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add a todo\",\n    value: input,\n    onChange: handleChange,\n    name: \"text\",\n    className: \"todo-input\",\n    ref: inputRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"todo-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Add todo\")));\n}\nexport default TodoForm;\n\n//   return (\n//     <form onSubmit={handleSubmit} className='todo-form'>\n//       {props.edit && props.edit?.id ? (\n//         <>\n//           <input\n//             placeholder='Update your item'\n//             value={input}\n//             onChange={handleChange}\n//             name='text'\n//             ref={inputRef}\n//             className='todo-input edit'\n//             required\n//           />\n//           <button className='todo-button edit'>\n//             Update\n//           </button>\n//         </>\n//       ) : (\n//         <>\n//           <input\n//             placeholder='Add a todo'\n//             value={input}\n//             onChange={handleChange}\n//             name='text'\n//             className='todo-input'\n//             ref={inputRef}\n//             required\n//           />\n//           <button  className='todo-button'>\n//             Add todo\n//           </button>\n//         </>\n//       )}\n//     </form>\n//   );\n// }","map":{"version":3,"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","id","handleChange","e","target","handleSubmit","preventDefault","onSubmit","Math","floor","random","text"],"sources":["D:/ReactJS/TodoList/src/components/TodoForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit?.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  useEffect(()=>{\n    if(props.edit?.id) {\n      setInput(props.edit?.value)\n    }\n  }, [props.edit])\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n          id: Math.floor(Math.random() * 10000),\n          text: input\n        });\n\n    setInput('');\n  };\n\n  if (props.edit && props.edit?.id) {\n    return (\n      <form onSubmit={handleSubmit} className='todo-form'>\n        <>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n            required\n          />\n          <button className='todo-button edit'>\n            Update\n          </button>\n        </>\n      </form>\n        )} \n\n\n    return (\n      <form onSubmit={handleSubmit} className='todo-form'>\n        <>\n          <input\n            placeholder='Add a todo'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n            required\n          />\n          <button  className='todo-button'>\n            Add todo\n          </button>\n        </>\n      </form>\n  )}\n\nexport default TodoForm;\n\n//   return (\n//     <form onSubmit={handleSubmit} className='todo-form'>\n//       {props.edit && props.edit?.id ? (\n//         <>\n//           <input\n//             placeholder='Update your item'\n//             value={input}\n//             onChange={handleChange}\n//             name='text'\n//             ref={inputRef}\n//             className='todo-input edit'\n//             required\n//           />\n//           <button className='todo-button edit'>\n//             Update\n//           </button>\n//         </>\n//       ) : (\n//         <>\n//           <input\n//             placeholder='Add a todo'\n//             value={input}\n//             onChange={handleChange}\n//             name='text'\n//             className='todo-input'\n//             ref={inputRef}\n//             required\n//           />\n//           <button  className='todo-button'>\n//             Add todo\n//           </button>\n//         </>\n//       )}\n//     </form>\n//   );\n// }\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAE1D,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACI,KAAK,CAACG,IAAI,kBAAGH,KAAK,CAACG,IAAI,gDAAV,YAAYC,KAAK,GAAG,EAAE,CAAC;EAEvE,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACC,OAAO,CAACC,KAAK,EAAE;EAC1B,CAAC,CAAC;EAEFV,SAAS,CAAC,MAAI;IAAA;IACZ,oBAAGG,KAAK,CAACG,IAAI,iDAAV,aAAYK,EAAE,EAAE;MAAA;MACjBN,QAAQ,iBAACF,KAAK,CAACG,IAAI,iDAAV,aAAYC,KAAK,CAAC;IAC7B;EACF,CAAC,EAAE,CAACJ,KAAK,CAACG,IAAI,CAAC,CAAC;EAEhB,MAAMM,YAAY,GAAGC,CAAC,IAAI;IACxBR,QAAQ,CAACQ,CAAC,CAACC,MAAM,CAACP,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMQ,YAAY,GAAGF,CAAC,IAAI;IACxBA,CAAC,CAACG,cAAc,EAAE;IAElBb,KAAK,CAACc,QAAQ,CAAC;MACTN,EAAE,EAAEO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,KAAK,CAAC;MACrCC,IAAI,EAAEjB;IACR,CAAC,CAAC;IAENC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,IAAIF,KAAK,CAACG,IAAI,qBAAIH,KAAK,CAACG,IAAI,iDAAV,aAAYK,EAAE,GAAE;IAChC,oBACE;MAAM,QAAQ,EAAEI,YAAa;MAAC,SAAS,EAAC,WAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACjD,uDACE;MACE,WAAW,EAAC,kBAAkB;MAC9B,KAAK,EAAEX,KAAM;MACb,QAAQ,EAAEQ,YAAa;MACvB,IAAI,EAAC,MAAM;MACX,GAAG,EAAEJ,QAAS;MACd,SAAS,EAAC,iBAAiB;MAC3B,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACR,eACF;MAAQ,SAAS,EAAC,kBAAkB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YAE3B,CACR,CACE;EACJ;EAGL,oBACE;IAAM,QAAQ,EAAEO,YAAa;IAAC,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACjD,uDACE;IACE,WAAW,EAAC,YAAY;IACxB,KAAK,EAAEX,KAAM;IACb,QAAQ,EAAEQ,YAAa;IACvB,IAAI,EAAC,MAAM;IACX,SAAS,EAAC,YAAY;IACtB,GAAG,EAAEJ,QAAS;IACd,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACR,eACF;IAAS,SAAS,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAEvB,CACR,CACE;AACV;AAEH,eAAeN,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}