{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\TodoList\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nconst TodoList = _ref => {\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    updateTodo\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  console.log(edit, '1111111111111111111111111111111111111');\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n  if (edit.id) {\n    return /*#__PURE__*/React.createElement(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    });\n  }\n  return todos.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: todo.isComplete ? 'complete' : 'todo-row',\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"checkbox\",\n    type: \"checkbox\",\n    key: todo.id,\n    onClick: () => completeTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), todo.text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RiCloseCircleLine, {\n    onClick: () => removeTodo(todo.id),\n    className: \"delete-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TiEdit, {\n    onClick: () => setEdit({\n      id: todo.id,\n      value: todo.text\n    }),\n    className: \"edit-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }))));\n};\nexport default TodoList;","map":{"version":3,"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","TodoList","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","console","log","submitUpdate","map","todo","index","isComplete","text"],"sources":["D:/ReactJS/TodoList/src/components/TodoList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nconst TodoList = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  console.log(edit, '1111111111111111111111111111111111111')\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n   return <TodoForm edit={edit} onSubmit={submitUpdate} />\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'complete' : 'todo-row'}\n      key={index}\n    >\n      <div>\n        <input className='checkbox' type='checkbox' key={todo.id} onClick={() => completeTodo(todo.id)} />\n           {todo.text}\n      </div>\n      <div className='icons'>\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon'\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,QAAQ,GAAG,QAAqD;EAAA,IAApD;IAAEC,KAAK;IAAEC,YAAY;IAAEC,UAAU;IAAEC;EAAW,CAAC;EAC/D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFC,OAAO,CAACC,GAAG,CAACL,IAAI,EAAE,uCAAuC,CAAC;EAE1D,MAAMM,YAAY,GAAGH,KAAK,IAAI;IAC5BJ,UAAU,CAACC,IAAI,CAACE,EAAE,EAAEC,KAAK,CAAC;IAC1BF,OAAO,CAAC;MACNC,EAAE,EAAE,IAAI;MACRC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC;EAED,IAAIH,IAAI,CAACE,EAAE,EAAE;IACZ,oBAAO,oBAAC,QAAQ;MAAC,IAAI,EAAEF,IAAK;MAAC,QAAQ,EAAEM,YAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EACxD;EAEA,OAAOV,KAAK,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B;IACE,SAAS,EAAED,IAAI,CAACE,UAAU,GAAG,UAAU,GAAG,UAAW;IACrD,GAAG,EAAED,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,SAAS,EAAC,UAAU;IAAC,IAAI,EAAC,UAAU;IAAC,GAAG,EAAED,IAAI,CAACN,EAAG;IAAC,OAAO,EAAE,MAAML,YAAY,CAACW,IAAI,CAACN,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC9FM,IAAI,CAACG,IAAI,CACT,eACN;IAAK,SAAS,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACpB,oBAAC,iBAAiB;IAChB,OAAO,EAAE,MAAMb,UAAU,CAACU,IAAI,CAACN,EAAE,CAAE;IACnC,SAAS,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACvB,eACF,oBAAC,MAAM;IACL,OAAO,EAAE,MAAMD,OAAO,CAAC;MAAEC,EAAE,EAAEM,IAAI,CAACN,EAAE;MAAEC,KAAK,EAAEK,IAAI,CAACG;IAAK,CAAC,CAAE;IAC1D,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACrB,CACE,CAET,CAAC;AACJ,CAAC;AAED,eAAehB,QAAQ"},"metadata":{},"sourceType":"module"}