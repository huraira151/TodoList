{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\TodoList\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\n// import { TiEdit } from 'react-icons/bs';\n\nconst TodoList = _ref => {\n  let {\n    todos,\n    completeTodo,\n    removeTodo,\n    setedit\n  } = _ref;\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  useEffect(() => {\n    setedit(edit);\n  }, [edit, setedit]);\n  return todos.map((todo, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: todo.isComplete ? 'complete' : 'todo-row',\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"checkbox\",\n    type: \"checkbox\",\n    key: todo.id,\n    onClick: () => completeTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), todo.text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RiCloseCircleLine, {\n    onClick: () => removeTodo(todo.id),\n    className: \"delete-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }))));\n};\nexport default TodoList;","map":{"version":3,"names":["React","useEffect","useState","RiCloseCircleLine","TodoList","todos","completeTodo","removeTodo","setedit","edit","setEdit","id","value","map","todo","index","isComplete","text"],"sources":["D:/ReactJS/TodoList/src/components/TodoList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\n// import { TiEdit } from 'react-icons/bs';\n\nconst TodoList = ({ todos, completeTodo, removeTodo, setedit }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  useEffect(() => {\n    setedit(edit)\n  }, [edit, setedit])\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'complete' : 'todo-row'}\n      key={index}\n    >\n      <div>\n        {/* <BsFillCheckSquareFill /> */}\n        <input className='checkbox' type='checkbox' key={todo.id} onClick={() => completeTodo(todo.id)} />\n           {todo.text}\n      </div>\n      <div className='icons'>\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon'\n        />\n        {/* <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon'\n        /> */}\n      </div>\n    </div>\n  ));\n};\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD;;AAEA,MAAMC,QAAQ,GAAG,QAAkD;EAAA,IAAjD;IAAEC,KAAK;IAAEC,YAAY;IAAEC,UAAU;IAAEC;EAAQ,CAAC;EAC5D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC/BS,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACdO,OAAO,CAACC,IAAI,CAAC;EACf,CAAC,EAAE,CAACA,IAAI,EAAED,OAAO,CAAC,CAAC;EAEnB,OAAOH,KAAK,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B;IACE,SAAS,EAAED,IAAI,CAACE,UAAU,GAAG,UAAU,GAAG,UAAW;IACrD,GAAG,EAAED,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE;IAAO,SAAS,EAAC,UAAU;IAAC,IAAI,EAAC,UAAU;IAAC,GAAG,EAAED,IAAI,CAACH,EAAG;IAAC,OAAO,EAAE,MAAML,YAAY,CAACQ,IAAI,CAACH,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC9FG,IAAI,CAACG,IAAI,CACT,eACN;IAAK,SAAS,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACpB,oBAAC,iBAAiB;IAChB,OAAO,EAAE,MAAMV,UAAU,CAACO,IAAI,CAACH,EAAE,CAAE;IACnC,SAAS,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACvB,CAKE,CAET,CAAC;AACJ,CAAC;AAED,eAAeP,QAAQ"},"metadata":{},"sourceType":"module"}