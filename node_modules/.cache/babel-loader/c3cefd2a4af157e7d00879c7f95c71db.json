{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\TodoList\\\\src\\\\components\\\\TodoForm.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  // const [ error, setError ] = useState('')\n\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n\n    // if (input.length === 0) {\n    //   setError(true)\n    // } else {\n    //   setError(false)\n    //   props.onSubmit({\n    //     id: Math.floor(Math.random() * 10000),\n    //     text: input\n    //   });\n    // }\n\n    setInput('');\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"todo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: props.edit ? 'Update your item' : 'Add a todo',\n    value: input,\n    onChange: handleChange,\n    name: \"text\",\n    className: props.edit ? 'todo-input edit' : 'todo-input',\n    ref: inputRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: props.edit ? 'todo-button edit' : 'todo-button',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, props.edit ? 'Update' : 'Add todo')));\n}\nexport default TodoForm;","map":{"version":3,"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"sources":["D:/ReactJS/TodoList/src/components/TodoForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  // const [ error, setError ] = useState('')\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n          id: Math.floor(Math.random() * 10000),\n          text: input\n        });\n\n    // if (input.length === 0) {\n    //   setError(true)\n    // } else {\n    //   setError(false)\n    //   props.onSubmit({\n    //     id: Math.floor(Math.random() * 10000),\n    //     text: input\n    //   });\n    // }\n\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n     \n        \n     \n        <>\n          <input\n            placeholder= {props.edit?'Update your item':'Add a todo'}\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className={props.edit?'todo-input edit':'todo-input'}\n            ref={inputRef}\n            required\n          />\n          <button  className={props.edit?'todo-button edit':'todo-button'}>\n           {props.edit?'Update':'Add todo'} \n          </button>\n          {/* <br></br>\n          <br></br>\n          {error && input.length<=0 ? \n          <label className='error'>Field cannot be empty</label> : \"\"} */}\n        </>\n      \n    </form>\n  );\n}\n\nexport default TodoForm;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAE1D,SAASC,QAAQ,CAACC,KAAK,EAAE;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACI,KAAK,CAACG,IAAI,GAAGH,KAAK,CAACG,IAAI,CAACC,KAAK,GAAG,EAAE,CAAC;EACtE;;EAEA,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACC,OAAO,CAACC,KAAK,EAAE;EAC1B,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACxBP,QAAQ,CAACO,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMO,YAAY,GAAGF,CAAC,IAAI;IACxBA,CAAC,CAACG,cAAc,EAAE;IAElBZ,KAAK,CAACa,QAAQ,CAAC;MACTC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,KAAK,CAAC;MACrCC,IAAI,EAAEjB;IACR,CAAC,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACE;IAAM,QAAQ,EAAES,YAAa;IAAC,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAI/C,uDACE;IACE,WAAW,EAAGX,KAAK,CAACG,IAAI,GAAC,kBAAkB,GAAC,YAAa;IACzD,KAAK,EAAEF,KAAM;IACb,QAAQ,EAAEO,YAAa;IACvB,IAAI,EAAC,MAAM;IACX,SAAS,EAAER,KAAK,CAACG,IAAI,GAAC,iBAAiB,GAAC,YAAa;IACrD,GAAG,EAAEE,QAAS;IACd,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACR,eACF;IAAS,SAAS,EAAEL,KAAK,CAACG,IAAI,GAAC,kBAAkB,GAAC,aAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9DH,KAAK,CAACG,IAAI,GAAC,QAAQ,GAAC,UAAU,CACvB,CAKR,CAEA;AAEX;AAEA,eAAeJ,QAAQ"},"metadata":{},"sourceType":"module"}